<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\nrf_firmware.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\nrf_firmware.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Tue Sep 22 21:59:58 2020
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; mainloop &rArr; handleRadioCmd &rArr; radiolinkSetAddress &rArr; esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[10]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">GPIOTE_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">RADIO_IRQHandler</a> from esb.o(i.RADIO_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">RTC1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1f]">SWI2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[20]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[21]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[22]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_nrf51.o(i.SystemInit) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[15]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[11]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">TIMER2_IRQHandler</a> from systick.o(i.TIMER2_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[c]">UART0_IRQHandler</a> from uart.o(i.UART0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[25]">__main</a> from __main.o(!!!main) referenced from arm_startup_nrf51.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[28]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[7f]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[80]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[29]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[81]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2d]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[82]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[83]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[84]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[85]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[86]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[87]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[88]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[89]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[90]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[91]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[92]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[93]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[94]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[95]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[96]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[32]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[97]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[98]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[99]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[27]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[9e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[9f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; mainloop &rArr; handleRadioCmd &rArr; radiolinkSetAddress &rArr; esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[31]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a1]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[33]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configParamInit
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SWI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSendATKPPacket
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkReceiveATKPPacket
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>

<P><STRONG><a name="[a3]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_uread4</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRetry
</UL>

<P><STRONG><a name="[a4]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_uwrite4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
</UL>

<P><STRONG><a name="[a9]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
</UL>

<P><STRONG><a name="[38]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[37]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[aa]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
</UL>

<P><STRONG><a name="[ab]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
</UL>

<P><STRONG><a name="[ac]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
</UL>

<P><STRONG><a name="[ad]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[30]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ae]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[af]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[b0]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>RADIO_IRQHandler</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, esb.o(i.RADIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RADIO_IRQHandler &rArr; isRetry
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupTx
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupRx
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRetry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system_nrf51.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_disabled_in_debug_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systick.o(i.TIMER2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UART0_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uartlink.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartlinkReceiveATKPPacket
</UL>

<P><STRONG><a name="[48]"></a>configParamInit</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, config_param.o(i.configParamInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = configParamInit &rArr; writeConfigParamToFlash &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_cksum
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeConfigParamToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>esbCanTxPacket</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, esb.o(i.esbCanTxPacket))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbGetTxPacket
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSendATKPPacket
</UL>

<P><STRONG><a name="[4c]"></a>esbGetRxPacket</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, esb.o(i.esbGetRxPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = esbGetRxPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbIsRxPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkReceiveATKPPacket
</UL>

<P><STRONG><a name="[4e]"></a>esbGetTxPacket</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, esb.o(i.esbGetTxPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = esbGetTxPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbCanTxPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSendATKPPacket
</UL>

<P><STRONG><a name="[50]"></a>esbInit</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, esb.o(i.esbInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_bits
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytewise_bitswap
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbReset
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkInit
</UL>

<P><STRONG><a name="[4d]"></a>esbIsRxPacket</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, esb.o(i.esbIsRxPacket))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbGetRxPacket
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkReceiveATKPPacket
</UL>

<P><STRONG><a name="[76]"></a>esbReleaseRxPacket</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, esb.o(i.esbReleaseRxPacket))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkReceiveATKPPacket
</UL>

<P><STRONG><a name="[51]"></a>esbReset</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, esb.o(i.esbReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbInit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetDatarate
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetChannel
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetAddress
</UL>

<P><STRONG><a name="[77]"></a>esbSendTxPacket</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, esb.o(i.esbSendTxPacket))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSendATKPPacket
</UL>

<P><STRONG><a name="[52]"></a>esbSetAddress</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, esb.o(i.esbSetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbReset
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSetAddress
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkInit
</UL>

<P><STRONG><a name="[53]"></a>esbSetChannel</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, esb.o(i.esbSetChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = esbSetChannel &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbReset
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSetChannel
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkInit
</UL>

<P><STRONG><a name="[54]"></a>esbSetDatarate</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, esb.o(i.esbSetDatarate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = esbSetDatarate &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbReset
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSetDatarate
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkInit
</UL>

<P><STRONG><a name="[49]"></a>flash_read</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, config_param.o(i.flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configParamInit
</UL>

<P><STRONG><a name="[7e]"></a>flash_write</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, config_param.o(i.flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeConfigParamToFlash
</UL>

<P><STRONG><a name="[69]"></a>getRadioRssi</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radiolink.o(i.getRadioRssi))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; mainloop &rArr; handleRadioCmd &rArr; radiolinkSetAddress &rArr; esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configParamInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6b]"></a>msDelay</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, systick.o(i.msDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = msDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickGetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmInit
</UL>

<P><STRONG><a name="[68]"></a>pmGetVBAT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pm.o(i.pmGetVBAT))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[5f]"></a>pmInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, pm.o(i.pmInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pmInit &rArr; pmPowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msDelay
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmPowerOn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>pmIsCharging</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pm.o(i.pmIsCharging))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pmIsCharging
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[6f]"></a>pmPowerOn</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pm.o(i.pmPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pmPowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmStartAdc
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmInit
</UL>

<P><STRONG><a name="[6a]"></a>pmProcess</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, pm.o(i.pmProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pmProcess &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmStartAdc
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickGetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[67]"></a>pmUSBPower</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pm.o(i.pmUSBPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pmUSBPower
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[61]"></a>radiolinkInit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, radiolink.o(i.radiolinkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = radiolinkInit &rArr; esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetDatarate
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetChannel
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetAddress
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>radiolinkReceiveATKPPacket</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, radiolink.o(i.radiolinkReceiveATKPPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = radiolinkReceiveATKPPacket &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbReleaseRxPacket
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbIsRxPacket
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbGetRxPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[58]"></a>radiolinkSendATKPPacket</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, radiolink.o(i.radiolinkSendATKPPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = radiolinkSendATKPPacket &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSendTxPacket
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbGetTxPacket
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbCanTxPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>

<P><STRONG><a name="[5b]"></a>radiolinkSetAddress</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, radiolink.o(i.radiolinkSetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = radiolinkSetAddress &rArr; esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>

<P><STRONG><a name="[59]"></a>radiolinkSetChannel</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, radiolink.o(i.radiolinkSetChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = radiolinkSetChannel &rArr; esbSetChannel &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>

<P><STRONG><a name="[5a]"></a>radiolinkSetDatarate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, radiolink.o(i.radiolinkSetDatarate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = radiolinkSetDatarate &rArr; esbSetDatarate &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbSetDatarate
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>

<P><STRONG><a name="[65]"></a>systickGetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.systickGetTick))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msDelay
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[5e]"></a>systickInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, systick.o(i.systickInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = systickInit &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>uartGetc</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart.o(i.uartGetc))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartlinkReceiveATKPPacket
</UL>

<P><STRONG><a name="[60]"></a>uartInit</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, uart.o(i.uartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uartInit &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>uartIsDataReceived</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart.o(i.uartIsDataReceived))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartlinkReceiveATKPPacket
</UL>

<P><STRONG><a name="[7d]"></a>uartPutc</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(i.uartPutc))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartlinkSendATKPPacket
</UL>

<P><STRONG><a name="[64]"></a>uartlinkReceiveATKPPacket</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, uartlink.o(i.uartlinkReceiveATKPPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uartlinkReceiveATKPPacket &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartIsDataReceived
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartGetc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[56]"></a>uartlinkSendATKPPacket</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, uartlink.o(i.uartlinkSendATKPPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uartlinkSendATKPPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartPutc
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>

<P><STRONG><a name="[4b]"></a>writeConfigParamToFlash</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, config_param.o(i.writeConfigParamToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = writeConfigParamToFlash &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_cksum
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configParamInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[57]"></a>generateRandomNum</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(i.generateRandomNum))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>

<P><STRONG><a name="[55]"></a>handleRadioCmd</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, main.o(i.handleRadioCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = handleRadioCmd &rArr; radiolinkSetAddress &rArr; esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeConfigParamToFlash
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartlinkSendATKPPacket
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSetDatarate
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSetChannel
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSetAddress
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSendATKPPacket
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateRandomNum
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[62]"></a>mainloop</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, main.o(i.mainloop))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mainloop &rArr; handleRadioCmd &rArr; radiolinkSetAddress &rArr; esbSetAddress &rArr; esbReset &rArr; esbInit &rArr; bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartlinkSendATKPPacket
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartlinkReceiveATKPPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickGetTick
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkSendATKPPacket
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radiolinkReceiveATKPPacket
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmUSBPower
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmIsCharging
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmGetVBAT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRadioRssi
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleRadioCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>is_disabled_in_debug_needed</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, system_nrf51.o(i.is_disabled_in_debug_needed))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[44]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, system_nrf51.o(i.is_manual_peripheral_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4a]"></a>calculate_cksum</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, config_param.o(i.calculate_cksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = calculate_cksum
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeConfigParamToFlash
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configParamInit
</UL>

<P><STRONG><a name="[46]"></a>bytewise_bitswap</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, esb.o(i.bytewise_bitswap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bytewise_bitswap &rArr; swap_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbInit
</UL>

<P><STRONG><a name="[41]"></a>isRetry</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, esb.o(i.isRetry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isRetry
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_IRQHandler
</UL>

<P><STRONG><a name="[43]"></a>setupRx</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, esb.o(i.setupRx))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_IRQHandler
</UL>

<P><STRONG><a name="[42]"></a>setupTx</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, esb.o(i.setupTx))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_IRQHandler
</UL>

<P><STRONG><a name="[47]"></a>swap_bits</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, esb.o(i.swap_bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = swap_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytewise_bitswap
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esbInit
</UL>

<P><STRONG><a name="[6c]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pm.o(i.nrf_gpio_cfg_output))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmPowerOn
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmInit
</UL>

<P><STRONG><a name="[6e]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pm.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmPowerOn
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmInit
</UL>

<P><STRONG><a name="[70]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pm.o(i.nrf_gpio_pin_read))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmUSBPower
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmIsCharging
</UL>

<P><STRONG><a name="[6d]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pm.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmPowerOn
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmInit
</UL>

<P><STRONG><a name="[71]"></a>pmStartAdc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pm.o(i.pmStartAdc))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmPowerOn
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmProcess
</UL>

<P><STRONG><a name="[78]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, systick.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systickInit
</UL>

<P><STRONG><a name="[79]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, uart.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
